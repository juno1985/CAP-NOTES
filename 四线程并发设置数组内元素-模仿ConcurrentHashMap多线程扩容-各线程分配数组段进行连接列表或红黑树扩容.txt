/**
 * 
 * @author thinkpad
 * 四個線程分工設置數組為1
 */
public class MyConcurrentSet {
	
	private static volatile int[] arr = new int[4];
	
	private static volatile boolean done = false;
	
	public static void checkDone() {
		int sum = 0;
		for(int a : arr)
			sum += a;
		if(sum == 4) done = true;
	}

	public static void main(String[] args) throws InterruptedException {
		
		for(int i = 0; i < 4 ; i++) {
			MyThread thread = new MyThread();
			thread.start();
		}
		
		Thread.sleep(5000);
		
		for(int i = 0; i< arr.length; i++)
			System.out.println(arr[i]);

	}
	
	static class MyThread extends Thread{

		@Override
		public void run() {
			
				while(!done) {
					for(int i = arr.length-1; i >=0 ;i--) {
						if(arr[i] != 0) {
							System.out.println(Thread.currentThread().getName() + " skip " + i);
							i--;
						}
						else {
							synchronized(arr)
							{
								if(arr[i] == 0) {
									try {
										sleep(1000);
									} catch (InterruptedException e) {
										e.printStackTrace();
									}
									arr[i] = 1;
									System.out.println(Thread.currentThread().getName() + "--> arr[" + i + "]");
								}
								
							}
						}
					}
					checkDone();
				}
				
			}
		
		
	}
	
	

}
