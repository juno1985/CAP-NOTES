冒泡排序
try-catch-finally
工具类开发，private修饰构造器，static final修饰方法
二分查找
comparable/comparator



https://www.hackerrank.com/challenges/breaking-best-and-worst-records/problem
---------------------------------------------------------------------------------------------
 //list to array
   Integer[] arr = new Integer[s.size()];
   s.toArray(arr);
https://www.hackerrank.com/challenges/the-birthday-bar/problem
---------------------------------------------------------------------------------------------
//referance --> https://www.nayuki.io/page/next-lexicographical-permutation-algorithm
//String.charAt()
//String.subString(0
https://www.hackerrank.com/challenges/bigger-is-greater/problem
---------------------------------------------------------------------------------------------
https://www.hackerrank.com/challenges/divisible-sum-pairs/problem
https://www.hackerrank.com/challenges/non-divisible-subset/problem




https://www.hackerrank.com/challenges/arrays-ds/problem
https://www.hackerrank.com/challenges/array-left-rotation/problem
https://www.hackerrank.com/challenges/day-of-the-programmer/problem
---------------------------------------------------------------------------------------------
String的==和equals区别
String a = "abc"和 String a = new String("abc");
	String[] a_arr = {"abc"};
    	String[] b_arr= {"abc"};
    	System.out.println(a_arr[0] == b_arr[0]);
    	
    	String a = new String("abc");
    	String b = new String("abc");
    	System.out.println(a==b);
    	
    	String aa = "abc";
    	String bb = "abc";
    	System.out.println(aa==bb);
    	
    	aa = "bcd";
https://www.hackerrank.com/challenges/sparse-arrays/problem
---------------------------------------------------------------------------------------------

2-D List
https://www.hackerrank.com/challenges/dynamic-array/problem

HashMap
https://www.hackerrank.com/challenges/migratory-birds/problem?h_r=profile

Sorted Binary Tree & recursion
https://www.hackerrank.com/challenges/binary-search-tree-insertion/problem




