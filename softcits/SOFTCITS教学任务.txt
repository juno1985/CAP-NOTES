ArrayList add(1)/add(2)/add(2)/add(2)/add(3)  for 循环删除后结果
静态内部类->LinkedList/java.util.LinkedList.Node<E>
LinkedList/ArrayList区别？
java.util.Stack
冒泡排序
二分查找



comparable/comparator


https://www.hackerrank.com/challenges/arrays-ds/problem
https://www.hackerrank.com/challenges/array-left-rotation/problem
https://www.hackerrank.com/challenges/day-of-the-programmer/problem
---------------------------------------------------------------------------------------------
String的==和equals区别
String a = "abc"和 String a = new String("abc");
	String[] a_arr = {"abc"};
    	String[] b_arr= {"abc"};
    	System.out.println(a_arr[0] == b_arr[0]);
    	
    	String a = new String("abc");
    	String b = new String("abc");
    	System.out.println(a==b);
    	
    	String aa = "abc";
    	String bb = "abc";
    	System.out.println(aa==bb);
    	
    	aa = "bcd";
https://www.hackerrank.com/challenges/sparse-arrays/problem
---------------------------------------------------------------------------------------------

LinkedList
https://www.hackerrank.com/challenges/print-the-elements-of-a-linked-list/problem





------Dec 22---------------------------------------------------------------------------------------

https://www.hackerrank.com/challenges/insert-a-node-at-the-tail-of-a-linked-list/problem
https://www.hackerrank.com/challenges/insert-a-node-at-the-head-of-a-linked-list/problem?h_r=next-challenge&h_v=zen
https://www.hackerrank.com/challenges/delete-a-node-from-a-linked-list/problem?h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen
https://www.hackerrank.com/challenges/print-the-elements-of-a-linked-list-in-reverse/problem?h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen
https://www.hackerrank.com/challenges/reverse-a-linked-list/problem?h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen
https://www.hackerrank.com/challenges/compare-two-linked-lists/problem


to be researched------------------
ArrayList remove(int index) 
 final Object[] es = elementData;

        @SuppressWarnings("unchecked") E oldValue = (E) es[index];
        fastRemove(es, index);












LinkedList
https://www.hackerrank.com/challenges/delete-duplicate-value-nodes-from-a-sorted-linked-list/problem

PreOrder Tree
https://www.hackerrank.com/challenges/tree-preorder-traversal/problem

PostOrder Tree
https://www.hackerrank.com/challenges/tree-postorder-traversal/problem

2-D List
https://www.hackerrank.com/challenges/dynamic-array/problem

HashMap
https://www.hackerrank.com/challenges/migratory-birds/problem?h_r=profile

Sorted Binary Tree & recursion
https://www.hackerrank.com/challenges/binary-search-tree-insertion/problem




